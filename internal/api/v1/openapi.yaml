# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: GRPCService API
    description: gRPCService для управления брендами и моделями
    version: 0.0.1
paths:
    /brands:
        get:
            tags:
                - GRPCService
            operationId: GRPCService_GetAllBrands
            parameters:
                - name: filter
                  in: query
                  schema:
                    type: string
                - name: sort
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAllBrandsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /brands/{brandId}:
        get:
            tags:
                - GRPCService
            description: '------------- Brands -------------'
            operationId: GRPCService_GetBrand
            parameters:
                - name: brandId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrandResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /models:
        get:
            tags:
                - GRPCService
            operationId: GRPCService_GetAllModels
            parameters:
                - name: filter
                  in: query
                  schema:
                    type: string
                - name: sort
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAllModelsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /models/{modelId}:
        get:
            tags:
                - GRPCService
            description: '------------- Models -------------'
            operationId: GRPCService_GetModel
            parameters:
                - name: modelId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetModelResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        Brand:
            type: object
            properties:
                brandId:
                    type: string
                name:
                    type: string
                link:
                    type: string
                description:
                    type: string
                logoUrl:
                    type: string
                coverImageUrl:
                    type: string
                foundedYear:
                    type: integer
                    format: int32
                originCountry:
                    type: string
                popularity:
                    type: integer
                    format: int32
                isPremium:
                    type: boolean
                isUpcoming:
                    type: boolean
                createdAt:
                    type: string
                updatedAt:
                    type: string
        GetAllBrandsResponse:
            type: object
            properties:
                brands:
                    type: array
                    items:
                        $ref: '#/components/schemas/Brand'
        GetAllModelsResponse:
            type: object
            properties:
                models:
                    type: array
                    items:
                        $ref: '#/components/schemas/Model'
        GetBrandResponse:
            type: object
            properties:
                brandId:
                    type: string
                name:
                    type: string
                link:
                    type: string
                description:
                    type: string
                logoUrl:
                    type: string
                coverImageUrl:
                    type: string
                foundedYear:
                    type: integer
                    format: int32
                originCountry:
                    type: string
                popularity:
                    type: integer
                    format: int32
                isPremium:
                    type: boolean
                isUpcoming:
                    type: boolean
                createdAt:
                    type: string
                updatedAt:
                    type: string
        GetModelResponse:
            type: object
            properties:
                modelId:
                    type: string
                brandId:
                    type: string
                name:
                    type: string
                releaseDate:
                    type: string
                isUpcoming:
                    type: boolean
                isLimited:
                    type: boolean
                createdAt:
                    type: string
                updatedAt:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Model:
            type: object
            properties:
                modelId:
                    type: string
                brandId:
                    type: string
                name:
                    type: string
                releaseDate:
                    type: string
                isUpcoming:
                    type: boolean
                isLimited:
                    type: boolean
                createdAt:
                    type: string
                updatedAt:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
tags:
    - name: GRPCService
